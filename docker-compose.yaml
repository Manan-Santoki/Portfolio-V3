version: '3.8'
services:
  portfolio-manan:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: portfolio
    restart: always
    labels:
      - "traefik.enable=true" # Important: This tells Traefik to manage this container

      # This label ensures Traefik uses the correct network if it's configured
      # to only look at containers on a specific network (which yours is).
      # While the 'providers.docker.network' in traefik.yml is the main directive,
      # this can sometimes be an extra hint, though often not strictly necessary
      # if the container is already on the correct network.
      # - "traefik.docker.network=dokploy-network" # Usually not needed if the container joins the network below

      # Main service (www version)
      - "traefik.http.routers.portfolio-www.rule=Host(`www.manansantoki.xyz`)"
      - "traefik.http.routers.portfolio-www.entrypoints=websecure"
      - "traefik.http.routers.portfolio-www.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portfolio-www.service=portfolio-service"

      # Non-www redirect router
      - "traefik.http.routers.portfolio-redirect.rule=Host(`manansantoki.xyz`)"
      - "traefik.http.routers.portfolio-redirect.entrypoints=websecure"
      - "traefik.http.routers.portfolio-redirect.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portfolio-redirect.middlewares=redirect-to-www"

      # HTTP to HTTPS redirect
      - "traefik.http.routers.portfolio-www-http.rule=Host(`www.manansantoki.xyz`)"
      - "traefik.http.routers.portfolio-www-http.entrypoints=web"
      - "traefik.http.routers.portfolio-www-http.middlewares=redirect-to-https@docker" # Referencing middleware defined on Traefik

      - "traefik.http.routers.portfolio-redirect-http.rule=Host(`manansantoki.xyz`)"
      - "traefik.http.routers.portfolio-redirect-http.entrypoints=web"
      - "traefik.http.routers.portfolio-redirect-http.middlewares=redirect-to-https@docker" # Referencing middleware defined on Traefik

      # Middleware definitions (these are service-specific for the redirect-to-www)
      # If redirect-to-https is globally defined in your Traefik's dynamic config or on entrypoints,
      # you might not need to define it per-router here.
      # However, your current setup defines them, which is fine.
      - "traefik.http.middlewares.redirect-to-www.redirectregex.regex=^https://manansantoki.xyz/(.*)"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.replacement=https://www.manansantoki.xyz/$${1}"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.permanent=true"

      # This redirect-to-https middleware is for your service's routers.
      # If Traefik has a global HTTP to HTTPS redirect on the 'web' entrypoint, this might be redundant
      # but won't harm.
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

      # Service definition
      - "traefik.http.services.portfolio-service.loadbalancer.server.port=80" # Your app inside the container listens on port 80

    networks:
      - dokploy-network # Connect this service to the dokploy-network

networks:
  dokploy-network:
    external: true     # Assume dokploy-network was created by Dokploy/Traefik setup
